#if 0
r32 v[256][3] = {
	{ -3.541285, -2.652123, -2.913784 },
	{ -3.357183, -2.457424, -2.747526 },
	{ -3.222273, -2.313550, -2.592020 },
	{ -3.094939, -2.154014, -2.420824 },
	{ -2.947333, -2.002213, -2.387022 },
	{ -3.000754, -2.111105, -2.439125 },
	{ -2.998807, -2.124770, -2.405993 },
	{ -3.022799, -2.101344, -2.380337 },
	{ -3.021293, -2.084157, -2.373224 },
	{ -3.026555, -2.081729, -2.351243 },
	{ -3.043097, -2.082893, -2.334044 },
	{ -3.024575, -2.058347, -2.322071 },
	{ -2.989092, -2.004021, -2.309876 },
	{ -2.967901, -1.882204, -2.286340 },
	{ -2.923967, -1.681645, -2.209025 },
	{ -2.861626, -1.529093, -2.024009 },
	{ -2.823384, -1.530974, -1.910621 },
	{ -2.745274, -1.639124, -2.001363 },
	{ -2.676184, -1.766444, -2.104116 },
	{ -2.568501, -1.861716, -2.119102 },
	{ -2.403896, -1.908175, -2.138723 },
	{ -2.312823, -1.938480, -2.147792 },
	{ -2.386276, -1.942565, -2.165982 },
	{ -2.505803, -1.952666, -2.180396 },
	{ -2.557336, -1.944239, -2.168564 },
	{ -2.565507, -1.882882, -2.164307 },
	{ -2.518666, -1.867498, -2.101441 },
	{ -2.444011, -1.836479, -2.044122 },
	{ -2.370763, -1.809280, -2.001435 },
	{ -2.263168, -1.792427, -1.973097 },
	{ -2.199469, -1.784829, -1.974658 },
	{ -2.180112, -1.771641, -1.921267 },
	{ -2.199577, -1.757895, -1.903240 },
	{ -2.175428, -1.731594, -1.872335 },
	{ -2.159228, -1.711149, -1.861226 },
	{ -2.130423, -1.696581, -1.842200 },
	{ -2.148188, -1.676514, -1.829057 },
	{ -2.099417, -1.647294, -1.818079 },
	{ -2.080014, -1.640567, -1.787920 },
	{ -2.052918, -1.612142, -1.754858 },
	{ -1.951292, -1.555468, -1.711571 },
	{ -1.893547, -1.509587, -1.692426 },
	{ -1.834492, -1.447062, -1.628615 },
	{ -1.752664, -1.433690, -1.567942 },
	{ -1.782826, -1.405392, -1.536513 },
	{ -1.781254, -1.386039, -1.481400 },
	{ -1.737518, -1.362100, -1.434391 },
	{ -1.760786, -1.332388, -1.403800 },
	{ -1.664308, -1.330570, -1.377301 },
	{ -1.618100, -1.350090, -1.342682 },
	{ -1.566210, -1.347208, -1.311982 },
	{ -1.516589, -1.325110, -1.229145 },
	{ -1.435123, -1.329078, -1.202038 },
	{ -1.369665, -1.319672, -1.203504 },
	{ -1.336483, -1.311454, -1.196831 },
	{ -1.255248, -1.314406, -1.202132 },
	{ -1.218302, -1.300528, -1.201134 },
	{ -1.166145, -1.269306, -1.209886 },
	{ -1.144660, -1.242652, -1.187372 },
	{ -1.110000, -1.262882, -1.153168 },
	{ -1.101608, -1.215123, -1.137071 },
	{ -1.099039, -1.175063, -1.109758 },
	{ -1.101564, -1.132754, -1.064073 },
	{ -1.075094, -1.065058, -1.026153 },
	{ -1.039442, -1.000431, -0.987276 },
	{ -1.031782, -0.972262, -0.921448 },
	{ -1.002431, -0.935760, -0.860519 },
	{ -0.975144, -0.906055, -0.812340 },
	{ -0.933314, -0.879597, -0.776381 },
	{ -0.878308, -0.856479, -0.726440 },
	{ -0.839285, -0.836342, -0.704634 },
	{ -0.798038, -0.821370, -0.674821 },
	{ -0.783051, -0.809502, -0.654376 },
	{ -0.745354, -0.791469, -0.647767 },
	{ -0.708459, -0.775557, -0.651216 },
	{ -0.671633, -0.759305, -0.667437 },
	{ -0.652070, -0.748659, -0.672638 },
	{ -0.643864, -0.726110, -0.673896 },
	{ -0.629886, -0.706927, -0.679293 },
	{ -0.611229, -0.692122, -0.685007 },
	{ -0.607837, -0.669085, -0.686802 },
	{ -0.596644, -0.655354, -0.676829 },
	{ -0.589552, -0.647895, -0.660819 },
	{ -0.573395, -0.635988, -0.663064 },
	{ -0.554952, -0.625282, -0.640812 },
	{ -0.546076, -0.615799, -0.626183 },
	{ -0.531626, -0.606014, -0.611391 },
	{ -0.513921, -0.590231, -0.594396 },
	{ -0.493297, -0.578773, -0.576330 },
	{ -0.474524, -0.585647, -0.577756 },
	{ -0.455014, -0.579847, -0.557828 },
	{ -0.450605, -0.530023, -0.557181 },
	{ -0.436554, -0.520478, -0.544933 },
	{ -0.442884, -0.530220, -0.548252 },
	{ -0.440953, -0.506979, -0.526476 },
	{ -0.462398, -0.455487, -0.499599 },
	{ -0.483871, -0.434308, -0.478749 },
	{ -0.497062, -0.419887, -0.423257 },
	{ -0.512270, -0.394925, -0.394606 },
	{ -0.517486, -0.375094, -0.329475 },
	{ -0.535038, -0.365995, -0.267176 },
	{ -0.513078, -0.353409, -0.179980 },
	{ -0.477382, -0.390719, -0.135544 },
	{ -0.473151, -0.383245, -0.088903 },
	{ -0.442943, -0.355917, -0.069054 },
	{ -0.392019, -0.354526, -0.052911 },
	{ -0.376067, -0.343505, 0.024454 },
	{ -0.335556, -0.329536, 0.059752 },
	{ -0.323182, -0.328375, 0.023016 },
	{ -0.295011, -0.309580, -0.007106 },
	{ -0.243706, -0.302383, -0.004817 },
	{ -0.192255, -0.257915, -0.017273 },
	{ -0.164139, -0.261596, -0.056990 },
	{ -0.153103, -0.234427, -0.108271 },
	{ -0.112473, -0.213086, -0.133988 },
	{ -0.116740, -0.175968, -0.133362 },
	{ -0.097723, -0.176468, -0.143486 },
	{ -0.098751, -0.141628, -0.140993 },
	{ -0.092002, -0.127073, -0.115802 },
	{ -0.093426, -0.112964, -0.118456 },
	{ -0.084824, -0.105316, -0.117112 },
	{ -0.075016, -0.115519, -0.095278 },
	{ -0.068106, -0.090437, -0.089034 },
	{ -0.071773, -0.064265, -0.078147 },
	{ -0.053479, -0.072083, -0.038148 },
	{ -0.026883, -0.044847, -0.044461 },
	{ -0.023485, -0.028128, -0.017359 },
	{ -0.001562, -0.009052, -0.014874 },
	{ 0.000000, 0.000000, 0.000000 },
	{ 0.042196, 0.002330, 0.002725 },
	{ 0.046447,-0.001107, 0.025869 },
	{ 0.076459, 0.038173, 0.057334 },
	{ 0.097543, 0.055091, 0.067945 },
	{ 0.094198, 0.080459, 0.073156 },
	{ 0.103070, 0.088324, 0.092996 },
	{ 0.112229, 0.060299, 0.101720 },
	{ 0.113370, 0.050308, 0.114173 },
	{ 0.111891, 0.093281, 0.113556 },
	{ 0.110407, 0.174877, 0.119128 },
	{ 0.109587, 0.201704, 0.144837 },
	{ 0.113559, 0.231349, 0.176584 },
	{ 0.104105, 0.259491, 0.192901 },
	{ 0.096259, 0.303416, 0.257277 },
	{ 0.093154, 0.305058, 0.293973 },
	{ 0.094359, 0.348497, 0.349632 },
	{ 0.107777, 0.380905, 0.398734 },
	{ 0.116635, 0.403005, 0.456505 },
	{ 0.125785, 0.427958, 0.503563 },
	{ 0.175923, 0.470891, 0.534387 },
	{ 0.237986, 0.475660, 0.551454 },
	{ 0.271863, 0.472965, 0.596201 },
	{ 0.317558, 0.505461, 0.628202 },
	{ 0.340406, 0.529474, 0.645142 },
	{ 0.387268, 0.542498, 0.654338 },
	{ 0.441647, 0.556035, 0.708801 },
	{ 0.472779, 0.565952, 0.709837 },
	{ 0.577116, 0.589754, 0.753874 },
	{ 0.636493, 0.622245, 0.788191 },
	{ 0.698349, 0.656479, 0.804500 },
	{ 0.712522, 0.698457, 0.839385 },
	{ 0.744639, 0.705409, 0.866106 },
	{ 0.774814, 0.753894, 0.894945 },
	{ 0.802976, 0.781837, 0.906044 },
	{ 0.790394, 0.808501, 0.913112 },
	{ 0.786270, 0.832889, 0.960726 },
	{ 0.782590, 0.824019, 0.977758 },
	{ 0.782245, 0.829542, 1.004272 },
	{ 0.755921, 0.854404, 1.033044 },
	{ 0.749408, 0.881202, 1.061567 },
	{ 0.746590, 0.883667, 1.093480 },
	{ 0.718174, 0.898322, 1.118102 },
	{ 0.723768, 0.930486, 1.162733 },
	{ 0.721558, 0.936506, 1.204316 },
	{ 0.724368, 0.981661, 1.228677 },
	{ 0.733146, 1.013477, 1.276572 },
	{ 0.756386, 1.066102, 1.354257 },
	{ 0.796614, 1.120307, 1.400909 },
	{ 0.850409, 1.163071, 1.439362 },
	{ 0.882413, 1.198443, 1.451194 },
	{ 0.919205, 1.229504, 1.482838 },
	{ 0.962910, 1.258817, 1.487313 },
	{ 0.988168, 1.283992, 1.536514 },
	{ 1.020074, 1.299538, 1.549138 },
	{ 1.032892, 1.342398, 1.561887 },
	{ 1.054278, 1.377238, 1.570497 },
	{ 1.067348, 1.395893, 1.593200 },
	{ 1.099359, 1.432766, 1.598677 },
	{ 1.136841, 1.470178, 1.616543 },
	{ 1.151918, 1.495323, 1.608089 },
	{ 1.171730, 1.516910, 1.583898 },
	{ 1.200061, 1.538389, 1.577861 },
	{ 1.230249, 1.586627, 1.589572 },
	{ 1.270337, 1.598292, 1.590709 },
	{ 1.289514, 1.629778, 1.611750 },
	{ 1.326735, 1.651667, 1.635590 },
	{ 1.356478, 1.672140, 1.649917 },
	{ 1.393506, 1.676380, 1.643511 },
	{ 1.431079, 1.698950, 1.656675 },
	{ 1.479908, 1.719375, 1.684325 },
	{ 1.532320, 1.727751, 1.694921 },
	{ 1.556248, 1.774082, 1.705271 },
	{ 1.599410, 1.756669, 1.711792 },
	{ 1.630518, 1.770585, 1.736380 },
	{ 1.672479, 1.798119, 1.760109 },
	{ 1.694562, 1.851107, 1.763866 },
	{ 1.698046, 1.860487, 1.779220 },
	{ 1.707002, 1.829661, 1.794720 },
	{ 1.659696, 1.802129, 1.816734 },
	{ 1.645164, 1.804266, 1.823463 },
	{ 1.618023, 1.817835, 1.829348 },
	{ 1.596565, 1.825634, 1.848957 },
	{ 1.586597, 1.817032, 1.847239 },
	{ 1.583333, 1.798762, 1.852195 },
	{ 1.593493, 1.801239, 1.875831 },
	{ 1.602264, 1.820453, 1.899479 },
	{ 1.623507, 1.841114, 1.955823 },
	{ 1.620453, 1.854789, 1.995895 },
	{ 1.666560, 1.861788, 2.025087 },
	{ 1.679960, 1.868992, 2.016816 },
	{ 1.715042, 1.907785, 2.042209 },
	{ 1.730425, 1.918258, 2.055755 },
	{ 1.768053, 1.958262, 2.100146 },
	{ 1.783530, 1.982182, 2.090287 },
	{ 1.862580, 2.002933, 2.125196 },
	{ 1.864202, 2.028270, 2.091989 },
	{ 1.848162, 2.067863, 2.080519 },
	{ 1.854377, 2.091799, 2.119352 },
	{ 1.858975, 2.118193, 2.175391 },
	{ 1.861359, 2.141581, 2.186499 },
	{ 1.896578, 2.147536, 2.208903 },
	{ 1.916678, 2.177618, 2.233709 },
	{ 1.963410, 2.213932, 2.295295 },
	{ 1.980683, 2.235883, 2.320180 },
	{ 1.995400, 2.266961, 2.369660 },
	{ 2.033185, 2.286066, 2.386344 },
	{ 2.064759, 2.316383, 2.447585 },
	{ 2.091313, 2.337197, 2.493104 },
	{ 2.117432, 2.346938, 2.500666 },
	{ 2.160328, 2.372203, 2.541281 },
	{ 2.192536, 2.393542, 2.557035 },
	{ 2.222160, 2.447181, 2.597232 },
	{ 2.241430, 2.462491, 2.660446 },
	{ 2.283140, 2.521632, 2.692869 },
	{ 2.282492, 2.525976, 2.754526 },
	{ 2.333452, 2.577841, 2.814066 },
	{ 2.358693, 2.621465, 2.801526 },
	{ 2.392008, 2.637935, 2.908794 },
	{ 2.446425, 2.690878, 2.894332 },
	{ 2.518709, 2.739131, 3.006705 },
	{ 2.609350, 2.841704, 2.978404 },
	{ 2.725757, 2.948064, 3.172094 },
	{ 2.919063, 3.058321, 3.374432 },
	{ 3.139598, 3.243848, 3.335558 },
	{ 3.249095, 3.517605, 3.835610 },
	{ 3.249095, 3.517605, 3.835610 },
	{ 3.249095, 3.517605, 3.835610 },
};
#endif
r32 v[256][3] = {

	{ - 4.835205, - 4.861212, - 5.941524},
	{ - 4.574996, - 4.561200, - 5.428513},
	{ - 4.370655, - 4.330711, - 5.103978},
	{ - 4.197775, - 4.142890, - 4.875267},
	{ - 4.049037, - 3.985637, - 4.701742},
	{ - 3.926443, - 3.854431, - 4.560754},
	{ - 3.811468, - 3.745392, - 4.439166},
	{ - 3.723972, - 3.667111, - 4.338043},
	{ - 3.638380, - 3.602390, - 4.249716},
	{ - 3.559397, - 3.544532, - 4.175142},
	{ - 3.484446, - 3.493056, - 4.111104},
	{ - 3.415046, - 3.449143, - 4.058816},
	{ - 3.354163, - 3.408722, - 4.013499},
	{ - 3.300018, - 3.367562, - 3.971618},
	{ - 3.246514, - 3.323774, - 3.930117},
	{ - 3.195585, - 3.280988, - 3.881068},
	{ - 3.147277, - 3.242199, - 3.823505},
	{ - 3.096811, - 3.201073, - 3.762676},
	{ - 3.043013, - 3.156705, - 3.701658},
	{ - 2.989114, - 3.110303, - 3.640654},
	{ - 2.935002, - 3.064502, - 3.576495},
	{ - 2.880568, - 3.014279, - 3.510033},
	{ - 2.825563, - 2.960569, - 3.443368},
	{ - 2.767585, - 2.901552, - 3.375777},
	{ - 2.706958, - 2.840303, - 3.309031},
	{ - 2.650477, - 2.781564, - 3.243587},
	{ - 2.595749, - 2.727969, - 3.177323},
	{ - 2.544620, - 2.679155, - 3.113916},
	{ - 2.497809, - 2.629184, - 3.055022},
	{ - 2.451698, - 2.578904, - 2.996510},
	{ - 2.411658, - 2.526288, - 2.937382},
	{ - 2.373366, - 2.471085, - 2.874231},
	{ - 2.331108, - 2.413798, - 2.810527},
	{ - 2.290089, - 2.357800, - 2.746163},
	{ - 2.250260, - 2.303706, - 2.681367},
	{ - 2.209497, - 2.251310, - 2.616490},
	{ - 2.171297, - 2.199570, - 2.550495},
	{ - 2.127297, - 2.145021, - 2.483757},
	{ - 2.084014, - 2.095797, - 2.417242},
	{ - 2.039128, - 2.046467, - 2.353294},
	{ - 1.993094, - 1.997462, - 2.288869},
	{ - 1.948441, - 1.951837, - 2.226522},
	{ - 1.903940, - 1.908528, - 2.168444},
	{ - 1.861079, - 1.867923, - 2.115754},
	{ - 1.818974, - 1.828998, - 2.068836},
	{ - 1.773666, - 1.791293, - 2.024832},
	{ - 1.726857, - 1.754541, - 1.986466},
	{ - 1.681687, - 1.718374, - 1.950796},
	{ - 1.634137, - 1.686165, - 1.917889},
	{ - 1.591190, - 1.654043, - 1.887419},
	{ - 1.550610, - 1.618286, - 1.858337},
	{ - 1.512287, - 1.582497, - 1.829263},
	{ - 1.474768, - 1.548041, - 1.802937},
	{ - 1.439103, - 1.512007, - 1.776978},
	{ - 1.405277, - 1.477751, - 1.747596},
	{ - 1.371054, - 1.443019, - 1.715943},
	{ - 1.339262, - 1.407162, - 1.682120},
	{ - 1.307486, - 1.371542, - 1.647854},
	{ - 1.276185, - 1.336669, - 1.610599},
	{ - 1.244543, - 1.302573, - 1.574127},
	{ - 1.213194, - 1.267048, - 1.537328},
	{ - 1.181772, - 1.233579, - 1.501489},
	{ - 1.149076, - 1.201182, - 1.466586},
	{ - 1.115172, - 1.170162, - 1.434179},
	{ - 1.081463, - 1.141372, - 1.404204},
	{ - 1.048831, - 1.114941, - 1.375688},
	{ - 1.016786, - 1.088760, - 1.348841},
	{ - 0.985690, - 1.063699, - 1.324587},
	{ - 0.954986, - 1.039975, - 1.302141},
	{ - 0.926033, - 1.016925, - 1.280977},
	{ - 0.899092, - 0.995273, - 1.261276},
	{ - 0.873618, - 0.974613, - 1.241380},
	{ - 0.849788, - 0.954643, - 1.223916},
	{ - 0.826251, - 0.934793, - 1.206259},
	{ - 0.804782, - 0.915828, - 1.188855},
	{ - 0.785379, - 0.897516, - 1.171119},
	{ - 0.767977, - 0.879437, - 1.151948},
	{ - 0.751648, - 0.861320, - 1.133023},
	{ - 0.735580, - 0.844568, - 1.115302},
	{ - 0.720006, - 0.828461, - 1.095764},
	{ - 0.705605, - 0.810923, - 1.074976},
	{ - 0.690763, - 0.793740, - 1.053079},
	{ - 0.676273, - 0.777043, - 1.031380},
	{ - 0.661830, - 0.759434, - 1.008644},
	{ - 0.648628, - 0.740205, - 0.983141},
	{ - 0.636745, - 0.720491, - 0.956705},
	{ - 0.625257, - 0.700504, - 0.926855},
	{ - 0.614487, - 0.679537, - 0.895523},
	{ - 0.604351, - 0.658167, - 0.861048},
	{ - 0.595377, - 0.637245, - 0.822854},
	{ - 0.586333, - 0.615624, - 0.778433},
	{ - 0.577154, - 0.596258, - 0.732424},
	{ - 0.568160, - 0.579851, - 0.683522},
	{ - 0.559634, - 0.563822, - 0.633975},
	{ - 0.549582, - 0.547972, - 0.583492},
	{ - 0.539762, - 0.533662, - 0.529860},
	{ - 0.527916, - 0.522004, - 0.475536},
	{ - 0.515266, - 0.511679, - 0.424867},
	{ - 0.501556, - 0.501448, - 0.379664},
	{ - 0.485829, - 0.492668, - 0.335993},
	{ - 0.468384, - 0.483398, - 0.297034},
	{ - 0.449137, - 0.474326, - 0.263865},
	{ - 0.430531, - 0.464331, - 0.239035},
	{ - 0.411585, - 0.450219, - 0.219005},
	{ - 0.392163, - 0.434397, - 0.202668},
	{ - 0.372468, - 0.419659, - 0.189148},
	{ - 0.354402, - 0.402847, - 0.177824},
	{ - 0.335779, - 0.385314, - 0.172510},
	{ - 0.318239, - 0.367083, - 0.171475},
	{ - 0.299498, - 0.347609, - 0.168906},
	{ - 0.280727, - 0.328926, - 0.164958},
	{ - 0.263085, - 0.308876, - 0.162092},
	{ - 0.247181, - 0.289653, - 0.159450},
	{ - 0.231460, - 0.269541, - 0.153122},
	{ - 0.214497, - 0.249480, - 0.144498},
	{ - 0.199366, - 0.229506, - 0.133380},
	{ - 0.182955, - 0.210515, - 0.123006},
	{ - 0.167549, - 0.190808, - 0.111791},
	{ - 0.150429, - 0.173064, - 0.101062},
	{ - 0.133691, - 0.156375, - 0.091411},
	{ - 0.115836, - 0.139433, - 0.080149},
	{ - 0.098027, - 0.122947, - 0.068173},
	{ - 0.081045, - 0.105042, - 0.057073},
	{ - 0.064365, - 0.088451, - 0.045727},
	{ - 0.047425, - 0.074710, - 0.034017},
	{ - 0.031426, - 0.061156, - 0.024405},
	{ - 0.017239, - 0.047912, - 0.013213},
	{ - 0.003056, - 0.032804, - 0.002691},
	{ 0.009603, - 0.017851, 0.009750},
	{ 0.022539, - 0.001828, 0.023192},
	{ 0.032859, 0.015572, 0.038487},
	{ 0.042797, 0.035765, 0.056681},
	{ 0.050935, 0.055098, 0.075685},
	{ 0.057706, 0.076674, 0.098399},
	{ 0.065108, 0.099467, 0.125256},
	{ 0.072476, 0.123991, 0.157685},
	{ 0.079336, 0.152084, 0.194520},
	{ 0.087855, 0.183557, 0.234669},
	{ 0.098997, 0.214060, 0.278500},
	{ 0.111610, 0.241406, 0.327134},
	{ 0.126491, 0.269289, 0.377520},
	{ 0.142530, 0.297481, 0.429463},
	{ 0.161206, 0.325112, 0.481623},
	{ 0.183109, 0.351193, 0.534918},
	{ 0.206863, 0.377777, 0.587018},
	{ 0.236010, 0.402815, 0.639752},
	{ 0.267852, 0.427249, 0.692376},
	{ 0.302715, 0.451720, 0.740383},
	{ 0.338984, 0.476421, 0.787900},
	{ 0.375298, 0.498972, 0.835162},
	{ 0.410580, 0.523395, 0.882196},
	{ 0.446637, 0.549240, 0.925876},
	{ 0.481089, 0.575125, 0.971224},
	{ 0.515492, 0.600559, 1.015581},
	{ 0.548833, 0.625829, 1.061637},
	{ 0.580299, 0.650942, 1.105259},
	{ 0.610130, 0.677052, 1.150627},
	{ 0.634810, 0.704266, 1.195460},
	{ 0.656540, 0.730879, 1.239516},
	{ 0.674403, 0.757609, 1.286460},
	{ 0.691659, 0.784882, 1.333611},
	{ 0.706700, 0.814304, 1.381347},
	{ 0.720405, 0.843881, 1.428917},
	{ 0.732314, 0.874526, 1.476856},
	{ 0.744940, 0.905846, 1.522740},
	{ 0.757995, 0.938615, 1.567736},
	{ 0.771844, 0.972161, 1.610191},
	{ 0.785748, 1.005830, 1.649737},
	{ 0.801526, 1.038516, 1.685457},
	{ 0.818209, 1.069737, 1.716031},
	{ 0.835726, 1.100533, 1.745880},
	{ 0.855389, 1.129777, 1.771077},
	{ 0.875020, 1.157440, 1.794213},
	{ 0.895779, 1.183949, 1.813481},
	{ 0.916281, 1.208227, 1.829879},
	{ 0.937532, 1.231155, 1.845519},
	{ 0.959655, 1.253748, 1.861079},
	{ 0.981216, 1.275546, 1.874929},
	{ 1.001675, 1.298249, 1.889650},
	{ 1.023466, 1.322355, 1.904899},
	{ 1.046259, 1.348971, 1.922038},
	{ 1.070578, 1.376689, 1.941232},
	{ 1.096608, 1.406407, 1.957383},
	{ 1.124096, 1.438726, 1.976192},
	{ 1.154639, 1.471868, 1.993107},
	{ 1.187167, 1.506143, 2.010732},
	{ 1.222388, 1.542378, 2.029387},
	{ 1.260704, 1.580867, 2.050245},
	{ 1.301913, 1.618630, 2.067341},
	{ 1.344491, 1.659583, 2.088705},
	{ 1.389318, 1.698780, 2.106388},
	{ 1.433853, 1.737030, 2.127493},
	{ 1.478738, 1.773960, 2.151648},
	{ 1.521915, 1.811752, 2.175866},
	{ 1.563363, 1.846138, 2.201414},
	{ 1.602928, 1.875376, 2.224098},
	{ 1.636889, 1.900228, 2.244731},
	{ 1.667570, 1.922184, 2.264160},
	{ 1.693065, 1.941807, 2.280770},
	{ 1.712019, 1.957127, 2.293201},
	{ 1.725157, 1.969299, 2.302501},
	{ 1.734834, 1.974675, 2.307983},
	{ 1.740395, 1.980025, 2.318697},
	{ 1.743293, 1.984040, 2.324220},
	{ 1.743168, 1.984989, 2.326074},
	{ 1.740994, 1.981361, 2.330383},
	{ 1.738487, 1.977419, 2.339773},
	{ 1.734476, 1.975458, 2.348995},
	{ 1.733844, 1.976617, 2.365849},
	{ 1.733304, 1.977166, 2.385186},
	{ 1.736234, 1.976775, 2.409912},
	{ 1.741277, 1.975392, 2.432975},
	{ 1.748934, 1.976606, 2.463454},
	{ 1.757663, 1.979894, 2.490521},
	{ 1.766925, 1.985225, 2.512191},
	{ 1.775614, 1.991258, 2.536217},
	{ 1.783913, 1.998112, 2.556928},
	{ 1.792897, 2.006793, 2.572767},
	{ 1.801294, 2.017933, 2.580931},
	{ 1.810314, 2.031364, 2.590840},
	{ 1.820778, 2.044775, 2.597735},
	{ 1.831914, 2.060107, 2.600633},
	{ 1.842034, 2.075231, 2.601694},
	{ 1.853978, 2.092198, 2.604905},
	{ 1.864205, 2.110451, 2.602914},
	{ 1.877010, 2.129447, 2.607876},
	{ 1.891745, 2.148019, 2.615496},
	{ 1.909480, 2.167814, 2.624047},
	{ 1.929943, 2.188800, 2.630293},
	{ 1.952830, 2.211351, 2.639191},
	{ 1.976859, 2.235566, 2.650505},
	{ 2.003038, 2.260875, 2.663392},
	{ 2.028145, 2.286258, 2.675136},
	{ 2.055520, 2.313154, 2.694992},
	{ 2.084725, 2.341145, 2.713672},
	{ 2.114412, 2.370076, 2.735197},
	{ 2.145962, 2.400068, 2.761211},
	{ 2.180110, 2.431410, 2.792313},
	{ 2.218667, 2.468297, 2.827840},
	{ 2.263164, 2.511956, 2.883370},
	{ 2.318971, 2.562549, 2.987077},
	{ 2.393149, 2.626820, 3.096768},
	{ 2.473604, 2.716974, 3.303018},
	{ 2.558568, 2.828146, 3.566350},
	{ 2.657430, 2.948968, 3.800625},
	{ 2.761390, 3.069868, 4.024445},
	{ 2.866469, 3.189971, 4.230934},
	{ 2.970323, 3.308197, 4.416932},
	{ 3.060692, 3.409645, 4.567844},
	{ 3.135676, 3.493557, 4.686277},
	{ 3.205082, 3.570588, 4.792441},
	{ 3.269165, 3.641232, 4.886990},
	{ 3.328648, 3.706570, 4.971883},
	{ 3.384510, 3.767511, 5.049972},
	{ 3.384510, 3.767511, 5.049972},
	{ 3.384510, 3.767511, 5.049972},
};

#define R32_E 2.71828182846f

int im_index(int x, int y, int width, int height, int channels, int bytes_per_channel) {
	return (y * channels * bytes_per_channel * width + x * channels * bytes_per_channel);
}

HANDLE ho_createfile(const char* filename)
{
	HANDLE handle = CreateFileA(filename, GENERIC_WRITE, 0, 0, CREATE_ALWAYS, FILE_ATTRIBUTE_NORMAL, 0);
	return handle;
}

u32 ho_writefile(HANDLE file, u32 bytes_to_write, u8* bytes)
{
	DWORD written = 0;
	WriteFile(file, bytes, bytes_to_write, &written, 0);
	return written;
}

void ho_closefile(HANDLE file)
{
	CloseHandle(file);
}

r64 luminance(r32 r, r32 g, r32 b) {
	return (0.299 * r + 0.587 * g + 0.114 * b);
}

int ldr_to_hdr(LDRImage* images, s32 im_count) {
	s32 width  = images[0].width;
	s32 height = images[0].height;

	r32* hdr = (r32*)calloc(4, width * height * sizeof(r32));
	s32* avg = (s32*)calloc(4, width * height * sizeof(s32));

	for (s32 y = 0; y < height; ++y) {
		for (s32 x = 0; x < width; ++x) {
			s32 index = im_index(x, y, width, height, 4, 1);
			for (s32 i = 0; i < im_count; ++i) {
				// original rgb values
				u8 r = images[i].data[index + 0];
				u8 g = images[i].data[index + 1];
				u8 b = images[i].data[index + 2];

				// values for rgb before gamma expansion
				u32 l_r = (u32)(powf((r32)r / 255.0f, 2.2f) * 255.0f);
				u32 l_g = (u32)(powf((r32)g / 255.0f, 2.2f) * 255.0f);
				u32 l_b = (u32)(powf((r32)b / 255.0f, 2.2f) * 255.0f);
				assert(l_r < 256);
				assert(l_g < 256);
				assert(l_b < 256);

				// if their value is not underexposed or overexposed, use in the average
				if (l_r < 255 && l_r > 0 && r < 255 && r > 0) {
					hdr[index + 0] += powf(R32_E, v[l_r][0]) / images[i].exposure_time;
					avg[index + 0] += 1;
				}
				if (l_g < 255 && l_g > 0 && g < 255 && g > 0) {
					hdr[index + 1] += powf(R32_E, v[l_g][1]) / images[i].exposure_time;
					avg[index + 1] += 1;
				}
				if (l_b < 255 && l_b > 0 && b < 255 && b > 0) {
					hdr[index + 2] += powf(R32_E, v[l_b][2]) / images[i].exposure_time;
					avg[index + 2] += 1;
				}
			}
			hdr[index + 3] = 1.0f;
		}
	}

	// Calculate average and average luminance
	r64 avg_luminance = 0.0;
	for (s32 y = 0; y < height; ++y) {
		for (s32 x = 0; x < width; ++x) {
			s32 index = im_index(x, y, width, height, 4, 1);
			r32 avg_r = (r32)avg[index + 0];
			r32 avg_g = (r32)avg[index + 1];
			r32 avg_b = (r32)avg[index + 2];
			if (avg_r > 0.0f) hdr[index + 0] /= avg_r;
			if (avg_g > 0.0f) hdr[index + 1] /= avg_g;
			if (avg_b > 0.0f) hdr[index + 2] /= avg_b;

			// Luminance
			avg_luminance += log(luminance(hdr[index + 0], hdr[index + 1], hdr[index + 2]) + 0.00000001);
		}
	}
	avg_luminance /= (r64)(width * height);
	avg_luminance = pow(R32_E, avg_luminance);

	// Go back to LDR transforming each pixel
	u8* compressed = (u8*)calloc(4, width * height);
	const r32 alpha = 0.18f;
	const r32 multfactor = alpha / (r32)avg_luminance;
	for (s32 y = 0; y < height; ++y) {
		for (s32 x = 0; x < width; ++x) {
			s32 index = im_index(x, y, width, height, 4, 1);

			r32 hr = hdr[index + 0];
			r32 hg = hdr[index + 1];
			r32 hb = hdr[index + 2];

			r32 scale = multfactor * luminance(hr, hg, hb);
			hr *= scale;
			hg *= scale;
			hb *= scale;

			u8 r = (u8)(powf((hr / (1.0f + hr)), 1.0f/2.2f) * 255.0f);
			u8 g = (u8)(powf((hg / (1.0f + hg)), 1.0f/2.2f) * 255.0f);
			u8 b = (u8)(powf((hb / (1.0f + hb)), 1.0f/2.2f) * 255.0f);

			compressed[index + 0] = r;
			compressed[index + 1] = g;
			compressed[index + 2] = b;
			compressed[index + 3] = 255;
		}
	}
	int err = stbi_write_png("myhdr_global_op.png", width, height, 4, compressed, width * 4);

#if 0
	HANDLE handle = ho_createfile("out3.bin");
	ho_writefile(handle, 4 * sizeof(float) * width * height, (u8*)hdr);
	ho_closefile(handle);
#endif

	u32 texture_id = create_texture_hdr(width, height, hdr);


	free(avg);
	free(hdr);

	return texture_id;
}